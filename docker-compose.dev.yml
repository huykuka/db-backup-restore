services:
#  frontend:
#    build:
#      context: frontend
#      dockerfile: docker/dev/Dockerfile
#    container_name: frontend
#    command: npm run start
#    restart: unless-stopped
#    environment:
#      - TERM=xterm-256color
#    develop:
#      watch:
#        - action: sync
#          path: ./frontend
#          target: /app
#          ignore:
#            - node_modules/
#            - docker/
#            - dist/
#            - .nx/
#        - action: rebuild
#          path: frontend/package.json
#        - action: rebuild
#          path: frontend/package-lock.json
#    ports:
#      - "4200:4200"
#    networks:
#      - app_network
  backend:
    build:
      context: backend
      dockerfile: docker/dev/Dockerfile
    command: air
    container_name: backend
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /app
          ignore:
           - docker/
           - bin/
           - tmp/
        - action: rebuild
          path: backend/go.mod
    restart: unless-stopped
    environment:
      - ENV=container-dev
      - APP_PORT=3001
      - PORT=${APP_PORT:-3000}
      - BACKUP_PATH=/home/thaiqu/backup
    ports:
      - "8080:${APP_PORT:-3000}"
    networks:
      - app_network
#  postgres:
#    image: bitnami/postgresql:latest
#    container_name: postgres
#    logging:
#      driver: "none"
#    networks:
#      - app_network
#    restart: unless-stopped
#    environment:
#      POSTGRESQL_USERNAME: ${POSTGRES_USER:-postgres}
#      POSTGRESQL_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
#      POSTGRESQL_DATABASE: ${POSTGRES_DB:-postgres-go}
#      POSTGRESQL_CLIENT_MIN_MESSAGES: info
#    ports:
#      - "5432:5432"

networks:
  app_network: