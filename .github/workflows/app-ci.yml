name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install
        working-directory: frontend

      - name: Run frontend tests
        run: npm test
        working-directory: frontend

  test-backend:
    runs-on: ubuntu-latest
    needs: test-frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Install dependencies
        run: go mod download
        working-directory: backend

      - name: Run backend tests
        run: go test ./...
        working-directory: backend

  build-frontend:
    runs-on: ubuntu-latest
    needs: test-frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install frontend dependencies
        run: npm install --verbose
        working-directory: frontend

      - name: Build frontend
        run: npm run build
        working-directory: frontend

      - name: Upload frontend build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist

          
  build-backend:
    runs-on: ubuntu-latest
    needs: [build-frontend,test-backend]
    container:
      image: golang:1.23-alpine
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download frontend build artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Install build dependencies
        run: apk add --no-cache gcc musl-dev 
      - name: Install backend dependencies
        run: go mod download
        working-directory: backend

      - name: List files in frontend build
        run: ls -la frontend/dist/frontend

      - name: Copy frontend build to backend
        run: cp -r frontend/dist/frontend/* backend/internal/routes/web

      - name: Build backend
        run: CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -o output/main ./cmd/db-tool/main.go
        working-directory: backend

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: backend/output
  
  build-docker:
    runs-on: ubuntu-latest
    needs: build-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download backend build artifacts
        uses: actions/download-artifact@v4
        with:
          name: backend-build
          path: backend/output

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t 010497/db-tools:latest -f docker/Dockerfile.build .
          docker push 010497/db-tools:latest
