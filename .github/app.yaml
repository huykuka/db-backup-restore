name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install
        working-directory: frontend

      - name: Run frontend tests
        run: npm test
        working-directory: frontend

  test-backend:
    runs-on: ubuntu-latest
    needs: test-frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.23'

      - name: Install dependencies
        run: go mod download
        working-directory: backend

      - name: Run backend tests
        run: go test ./...
        working-directory: backend

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install frontend dependencies
        run: npm install --verbose
        working-directory: frontend

      - name: Build frontend
        run: npm run build
        working-directory: frontend

      - name: Upload frontend build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: frontend-build
          path: frontend/dist

          
  build-backend:
    runs-on: ubuntu-latest
    needs: build-frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download frontend build artifacts
        uses: actions/download-artifact@v2
        with:
          name: frontend-build
          path: frontend/dist

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.23'

      - name: Install build dependencies
        run: apk add --no-cache gcc musl-dev

      - name: Install backend dependencies
        run: go mod download
        working-directory: backend

      - name: Copy frontend build to backend
        run: cp -r frontend/dist/frontend backend/web

      - name: Build backend
        run: go build -o backend/tmp/main ./cmd/db-tool/main.go
        working-directory: backend

      - name: Upload backend build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: backend-build
          path: backend/tmp/main

  # build-docker:
  #   runs-on: ubuntu-latest
  #   needs: build-backend
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Download backend build artifacts
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: backend-build
  #         path: backend/tmp

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: Login to DockerHub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Build and push Docker image
  #       run: |
  #         docker build -t your-docker-image-name:latest -f backend/Dockerfile .
  #         docker push your-docker-image-name:latest